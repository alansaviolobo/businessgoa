<?php

function businessgoa_menu() {

	$common = array ('page callback' => 'bg_section', 'page arguments' => array (0 ), 'access callback' => TRUE );

	$items ['home'] = array ('page callback' => 'bg_archives', 'access callback' => TRUE );
	$items ['etc'] = array ('page callback' => 'bg_etc', 'access callback' => TRUE );
	$items ['gallery'] = array ('page callback' => 'bg_gallery', 'access callback' => TRUE );
	$items ['aboutus'] = array ('page callback' => 'bg_about', 'access callback' => TRUE );
	$items ['features'] = array ('page callback' => 'bg_features', 'access callback' => TRUE );
	$items ['archivelist'] = array ('page callback' => 'bg_archivelist', 'access callback' => TRUE );
	$items ['archives/%'] = array ('page callback' => 'bg_archives', 'access callback' => TRUE, 'page arguments' => array (1 ) );

	$items ['Bon-Appetit'] = $common;
	$items ['Book-Shelf'] = $common;
	$items ['Cover-Story'] = $common;
	$items ['Editorial'] = $common;
	$items ['Family-Business'] = $common;
	$items ['Goan-Brand'] = $common;
	$items ['Green-Goa'] = $common;
	$items ['In-Focus'] = $common;
	$items ['Interview'] = $common;
	$items ['Legal-Eagle'] = $common;
	$items ['Love-For-Business'] = $common;
	$items ['Money-And-Markets'] = $common;
	$items ['Out-of-the-Box'] = $common;
	$items ['Professional-Dossier'] = $common;
	$items ['Starting-Young'] = $common;
	$items ['Story-of-Enterprise'] = $common;
	$items ['Thinking-Hat'] = $common;
	$items ['Uncommon-Wealth'] = $common;

	return $items;
}

function bg_get_article($section, $month = false) {
	if (! $month)
		$month = date ( 'F Y' );
	//fix this
	$count = 0;
	$terms = taxonomy_get_children ( 0, 1, 'tid' );
	usort ( $terms, create_function ( '$a, $b', 'return $b->weight - $a->weight;' ) );
	for(; $count < count ( $terms ) and $terms[$count]->name <> $month; $count ++)
	$section_id = current ( taxonomy_get_term_by_name ( $section ) )->tid;
	do {
		$month_id = $terms [$count++]->tid;
		$articles = taxonomy_select_nodes ( array ($section_id, $month_id ), 'and' );
		$test_fn = get_class ( $articles ) == 'mysqli_result' ? 'mysqli_num_rows' : 'mysql_num_rows';
	} while ( is_null ( $articles ) or call_user_func ( $test_fn, $articles ) == 0 and $count < count ( $terms ) );

	$test_fn = get_class ( $articles ) == 'mysqli_result' ? 'mysqli_fetch_object' : 'mysql_fetch_object';
	return node_load ( call_user_func ( $test_fn, $articles )->nid );
}

function bg_create_block($section) {
	$content = bg_get_article ( $section, next ( explode ( '/', $_GET ['q'] ) ) );
	$block ['subject'] = $section;
	$block ['content'] = "<h3>" . l ( t ( $content->title ), $content->path ) . "</h3>$content->teaser<br>" . l ( 'Read more »', $content->path, array ('attributes' => array ('class' => 'more' ) ) );
	return $block;
}

function businessgoa_block($op = 'list', $delta = 0, $edit = array()) {
/*update pages to <front>
archives/*
archivelist
etc
contact
features
gallery*/
	switch ($op) {
		case 'list' :
			$blocks [0] ['info'] = t ( 'Story of Enterprise' );
			$blocks [0] ['pages'] = '<front>';
			$blocks [0] ['cache'] = BLOCK_CACHE_GLOBAL;
			$blocks [0] ['region'] = 'bottom_left_region';
			$blocks [0] ['custom'] = true;
			$blocks [0] ['status'] = true;

			$blocks [1] ['info'] = t ( 'In Focus' );
			$blocks [1] ['pages'] = '<front>';
			$blocks [1] ['cache'] = BLOCK_CACHE_GLOBAL;
			$blocks [1] ['region'] = 'bottom_mid_region';
			$blocks [1] ['custom'] = true;
			$blocks [1] ['status'] = true;

			$blocks [2] ['info'] = t ( 'Starting Young' );
			$blocks [2] ['pages'] = '<front>';
			$blocks [2] ['cache'] = BLOCK_CACHE_GLOBAL;
			$blocks [2] ['region'] = 'bottom_right_region';
			$blocks [2] ['custom'] = true;
			$blocks [2] ['status'] = true;

			$blocks [3] ['info'] = t ( 'Goan Brand' );
			$blocks [3] ['pages'] = '<front>';
			$blocks [3] ['cache'] = BLOCK_CACHE_GLOBAL;
			$blocks [3] ['region'] = 'side_upper_region';
			$blocks [3] ['custom'] = true;
			$blocks [3] ['status'] = true;

			$blocks [4] ['info'] = t ( 'Interview' );
			$blocks [4] ['pages'] = '<front>';
			$blocks [4] ['cache'] = BLOCK_CACHE_GLOBAL;
			$blocks [4] ['region'] = 'side_mid_region';
			$blocks [4] ['custom'] = true;
			$blocks [4] ['status'] = true;

			$blocks [5] ['info'] = t ( 'Bon Appetit' );
			$blocks [5] ['pages'] = '<front>';
			$blocks [5] ['cache'] = BLOCK_CACHE_GLOBAL;
			$blocks [5] ['region'] = 'side_lower_region';
			$blocks [5] ['custom'] = true;
			$blocks [5] ['status'] = true;

			$blocks [6] ['info'] = t ( 'Facebook Fans' );
			$blocks [6] ['pages'] = '<front>';
			$blocks [6] ['cache'] = BLOCK_CACHE_GLOBAL;
			$blocks [6] ['region'] = 'side_upper_region';
			$blocks [6] ['custom'] = true;
			$blocks [6] ['status'] = true;

			$blocks [7] ['info'] = t ( 'Facebook Comments' );
			$blocks [7] ['pages'] = '<front>';
			$blocks [7] ['cache'] = BLOCK_CACHE_GLOBAL;
			$blocks [7] ['region'] = 'below_content_region';
			$blocks [7] ['custom'] = true;
			$blocks [7] ['status'] = true;

			$blocks [8] ['info'] = t ( 'Previous Articles' );
			$blocks [8] ['pages'] = '<front>';
			$blocks [8] ['cache'] = BLOCK_CACHE_PER_PAGE;
			$blocks [8] ['region'] = 'side_mid_region';
			$blocks [8] ['custom'] = false;
			$blocks [8] ['status'] = true;

			$blocks [9] ['info'] = t ( 'Other Articles' );
			$blocks [9] ['pages'] = '<front>';
			$blocks [9] ['cache'] = BLOCK_CACHE_PER_PAGE;
			$blocks [9] ['region'] = 'side_lower_region';
			$blocks [9] ['custom'] = false;
			$blocks [9] ['status'] = true;

			return $blocks;
		case 'view' :
			switch ($delta) {
				case 0 :
					return bg_create_block ( 'Story of Enterprise' );
				case 1 :
					return bg_create_block ( 'In Focus' );
				case 2 :
					return bg_create_block ( 'Starting Young' );
				case 3 :
					return bg_create_block ( 'Goan Brand' );
				case 4 :
					return bg_create_block ( 'Interview' );
				case 5 :
					return bg_create_block ( 'Bon Appetit' );
				case 6 :
					$block ['subject'] = null;
					$block ['content'] = "<fb:like-box profile_id='121764281183650' width='192' stream='false' header='false'></fb:like-box>";
					return $block;
				case 7 :
					$block ['subject'] = null;
					$block ['content'] = "<fb:comments width='522'></fb:comments>";
					return $block;
				case 8 :
					$nid = next ( explode ( '/', $_GET ['q'] ) );
					foreach ( taxonomy_get_vocabularies () as $vocab )
						if ($vocab->name == 'Section')
							$vid = $vocab->vid;
						//taxonomy_node_get_terms
					foreach ( node_load ( $nid )->taxonomy as $term )
						if ($term->vid == $vid)
							$tid = $term->tid;
					$nodes = taxonomy_select_nodes ( array ($tid ) );
					$html = null;
					$test_fn = get_class ( $nodes ) == 'mysqli_result' ? 'mysqli_fetch_object' : 'mysql_fetch_object';
					while ( $node = call_user_func ( $test_fn, $nodes ) )
						if ($nid != $node->nid) {
							$node = node_load ( $node->nid );
							$html .= '<li>' . l ( $node->title, $node->path ) . '</li>';
						}
					$html = "<ul>$html</ul>";

					$block ['subject'] = 'Previous Articles';
					$block ['content'] = $html;
					return $block;
				case 9 :
					$nid = next ( explode ( '/', $_GET ['q'] ) );
					foreach ( taxonomy_get_vocabularies () as $vocab )
						if ($vocab->name == 'Issue')
							$vid = $vocab->vid;
					foreach ( node_load ( $nid )->taxonomy as $term )
						if ($term->vid == $vid)
							$tid = $term->tid;
					$nodes = taxonomy_select_nodes ( array ($tid ) );
					$html = null;
					$test_fn = get_class ( $nodes ) == 'mysqli_result' ? 'mysqli_fetch_object' : 'mysql_fetch_object';
					while ( $node = call_user_func ( $test_fn, $nodes ) )
						if ($nid != $node->nid) {
							$node = node_load ( $node->nid );
							$html .= '<li>' . l ( $node->title, $node->path ) . '</li>';
						}
					$html = "<ul>$html</ul>";

					$block ['subject'] = 'Other Articles';
					$block ['content'] = $html;
					return $block;
			}
	}
	return $op->content;
}

function bg_section($section) {
	$section = str_replace ( '-', ' ', $section );
	drupal_goto ( bg_get_article ( $section )->path );
}

function bg_archives($issue = false) {
	$content = bg_get_article ( 'Cover Story', $issue );
	return "<h1>$content->title</h1>$content->teaser<br>" . l ( 'Read more »', $content->path, array ('attributes' => array ('class' => 'more' ) ) );
}

function bg_archivelist() {
	drupal_add_js ( drupal_get_path ( 'module', 'views_slideshow_imageflow' ) . '/ImageFlow_1.3.0/imageflow.js', 'module' );
	drupal_add_css ( drupal_get_path ( 'module', 'views_slideshow_imageflow' ) . '/ImageFlow_1.3.0/imageflow.css' );
	$terms = taxonomy_get_children ( 0, 1, 'tid' );
	foreach ( $terms as $term )
		$yearly_list [$term->description] [] = $term->name;
	$html = null;
	foreach ( $yearly_list as $year => $list ) {
		$js = "domReady ( function () { var gallery_$year = new ImageFlow (); gallery_$year.init ({ ImageFlowID:'gallery_$year', reflections:false, captions:false, imageCursor:'pointer', slider:false, startID:3 }); } );";
		drupal_add_js ( $js, 'inline', 'footer' );
		$html .= "<div id='gallery_$year' class='imageflow' style='width:1000px'>";
		foreach ( $list as $item )
			$html .= "<img src='/sites/default/files/cover-$item.jpg' longdesc='archives/$item' alt='$item' />";
		$html .= "</div>";
	}

	return $html;
}
/*
function bg_gallery() {
	drupal_add_js (drupal_get_path('module', 'businessgoa').'/jquery.galleriffic.js', 'module');

	$html = "<div id='controls'></div>
			<div id='loading'></div>
			<div id='slideshow'></div>
			<div id='caption'></div>
			<div id='thumbs'>
			<ul class='thumbs noscript'>";
	foreach(range(1, 40) as $count)
		$html .= "<li>
	            <a class='thumb' href='/sites/default/files/$count.jpg' title='$count'>
	                <img src='/sites/default/files/$count.jpg' alt='$count' />
	            </a>
	            <div class='caption'>
	                (Any html can go here)
	            </div>
	        </li>"
	$html .= "</ul></div>";
	return $html;
	/*jQuery(document).ready(function($) {
    var gallery = $('#thumbs').galleriffic({
        delay:                     3000, // in milliseconds
        numThumbs:                 20, // The number of thumbnails to show page
        preloadAhead:              40, // Set to -1 to preload all images
        enableTopPager:            false,
        enableBottomPager:         true,
        maxPagesToShow:            7,  // The maximum number of pages to display in either the top or bottom pager
        imageContainerSel:         '', // The CSS selector for the element within which the main slideshow image should be rendered
        controlsContainerSel:      '', // The CSS selector for the element within which the slideshow controls should be rendered
        captionContainerSel:       '', // The CSS selector for the element within which the captions should be rendered
        loadingContainerSel:       '', // The CSS selector for the element within which should be shown when an image is loading
        renderSSControls:          true, // Specifies whether the slideshow's Play and Pause links should be rendered
        renderNavControls:         true, // Specifies whether the slideshow's Next and Previous links should be rendered
        playLinkText:              'Play',
        pauseLinkText:             'Pause',
        prevLinkText:              'Previous',
        nextLinkText:              'Next',
        nextPageLinkText:          'Next &rsaquo;',
        prevPageLinkText:          '&lsaquo; Prev',
        enableHistory:             false, // Specifies whether the url's hash and the browser's history cache should update when the current slideshow image changes
        enableKeyboardNavigation:  true, // Specifies whether keyboard navigation is enabled
        autoStart:                 false, // Specifies whether the slideshow should be playing or paused when the page first loads
        syncTransitions:           false, // Specifies whether the out and in transitions occur simultaneously or distinctly
        defaultTransitionDuration: 1000, // If using the default transitions, specifies the duration of the transitions
        onSlideChange:             undefined, // accepts a delegate like such: function(prevIndex, nextIndex) { ... }
        onTransitionOut:           undefined, // accepts a delegate like such: function(slide, caption, isSync, callback) { ... }
        onTransitionIn:            undefined, // accepts a delegate like such: function(slide, caption, isSync) { ... }
        onPageTransitionOut:       undefined, // accepts a delegate like such: function(callback) { ... }
        onPageTransitionIn:        undefined, // accepts a delegate like such: function() { ... }
        onImageAdded:              undefined, // accepts a delegate like such: function(imageData, $li) { ... }
        onImageRemoved:            undefined  // accepts a delegate like such: function(imageData, $li) { ... }
    });
});
}*/

function bg_etc() {
	return "";
}

function bg_about() {
	return "";
}

function bg_features() {
	return "";
}